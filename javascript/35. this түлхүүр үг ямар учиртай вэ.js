// learn 35. this түлхүүр үг ямар учиртай вэ?

/*-Энгийн функцын хувьд this хувьсагч нь глобаль объектыг зааж байдаг. 
    Window, globalThis
-Объект дотор зарлагдсан функцын this нь уг объектоо зааж байдаг.Window
-This түлхүүр үг нь хэдийгээр үүсгэлийн шатанд үүсэх боловч яг утга нь АЖИЛЛУУЛАХ ШАТАНД тодорхойлогддог байна. */
console.log(this);
hello();
function hello() {
  console.log("hello функц ажиллаа ");
  console.log(this);
  console.log(window);
  console.log(globalThis);
}
var p1 = {
  name: "boldoo",
  printThis: function () {
    console.log(this);

    function secondFunction() {
      console.log("secondFunction ажилаа..." + this);
    }
    secondFunction(); // энгийн функц глобал объъектыг зааж байдаг.
  },
};
var p2 = {
  name: "Нараа",
};
// Энэ арай илүү төвөгтэй концевсийг хэлнэ.  Javascript developer-ын дунд арай Method bro --> функцын зээлэлт ойлголт:
/*Нэг объектын функцыг нөгөө объектонд зээлж авч хэрэглэх боломжтой байдаг. Энэ бас Javascript-ын super  боломжын нэг. */
p2.printThis = p1.printThis; // энгээл биччихнэ.
/*p1-ын printThis-ыг зээлж авсанч p2-ынхоо объектыг зааж байна. Хэрвээ үүсгэлийн шатанд this гэдэг хувьсагчын утганд тодорхой болдог бол p1-ыг ажиллуулахаас өмнө this юуг заах вэ гэдэг тодорхой болцон байх ёстой буюу this ажиллуулахаасаа өмнө p1 заан буюу ерөөсөө л name: "boldoo", гэдгийг  заачихсан байна. Тэгээд зээлж аваад дахиад ажиллуулах юм бол анхнаасаа үүсгэлийн шатанд name: "boldoo", заачихсан бол дахиж зээлж хэвлэхэд мөн л  name: "boldoo", гэж гарах байсан тэгтэл зээлж аваад хэрэглэсэн чинь name: "Нараа", гэж гарч ирж байна. Өөрөөр хэлбэл үүсгэлийн шатан дээр тодорхойлогдоогүй ажиллуулах явцад name: "Нараа", болж өөрчлөгдөж байна. Тэгэхээр баг зэрг нарийн ойлголт   Ажилж байхад юуч болж болзошгүй гэж ойлгож авлаа. */
p1.printThis();
p2.printThis();
