// learn 51. Дөрөвдүгээр бүлэг Функц болон Объект хандалтат архитектур Удамшлын давуу тал

/*Энэ хичээлээр объет гэж яг юу юм. Тэр дундаа javascript-ын prototype удамшил, prototype-ын бүтэц ер нь объет хандалт програмчлалыг гүнрүү орж үзнэ. Тэгээд үүнийг javascript хэл дээр хэрхэн хэрэгжүүлдэг болон бусад объет хандалт хэлнээс ямар ялгаатай юм бэ нарын ярилцах болно. Өөрөөр хэлбэл улам мэргэжлийн кодруу орж ирнэ.  
Өнөөдрийн хичээлээр програмын кодыг бичих  хоёр янзын үндсэн архитектурын талаар үзэцгээе. Зөндөө олон архитектур байдаг гэхдээ энэ аль нэгээр явдаг байж байгаа 

1. Функцад хандалтад архитектур - Давуу тал хурдан ажиллана. Функцаас функц дуудаадажиллапаг. 
                                - Сул тал нь систэм томрох тусам глобал хувьмагч хягалтаас гарч ихэлдэг. Хаан юу байгаа нь мэдэгдэхээ байж дараа засахад хэцүү болдог.  

2. Объектад хандалтад архитектур- Объектад төвлөрсөн өөр өөр үүрэгтэй объетуудыг загварчилж үүсгэнэ. 
                                - Өгөгдөл функцуудыг объет дотор хийж өгнө. 
                                - Объектад объетуудыг хийж өгнө. 
                                - Объект бүр эх объетдоо бичигдсэн функц өгөгдлүүдийг удамшуулах өвлөж авна.javascript
                                        Эх объет нь мөн эх объетоосоо удамшиж авна. 
    -Давуу тал :  Код эмх цэгцтэй. 
                - Объетууд өөр өөрийнхөө өгөгдлүүдийг хадгалж явдаг. 
                - Кодын дахин ашиглалт өснө,  объетуудыг хүссэн хэмжээгээрээ үүсгэх 
                - Өөрчлөлт сайжруулалтыг хурдан хийнэ.

    - Сул тал :  Ямар объет байх ёстойг загварчлах хугацаа. Системийг хийхэд нилээн сайн шинжээч байх ёстой. Эсвэл системийн шинжээчтэй хамтарч ажиллах ёстой болно. Юу вэ гэвэл яг ямар ямар объет энэ програм  энэ системд байх ёстой вэ нарийн бодож боловсруулна.  Үүнийг системийн шинжилгээ ба зохиомж гэсэн хичээлээр хийдэг. 
    
Ерөнхийдөө java, Ruby, бусад програмчлалын хэлүүд бол классик удамшилын модельтой Тэд нар бол классик удамшил буюу сонгодог удамшилтай. Юугаараа ялгаатай вэ гэвэл загвар объет нь тусгай class -аар хийдэг. class гэж зарлаад хийдэг. 

javascript бол prototype төрлийн удамшилтай. javascript class гэсэн объет байдаггүй. Хэдийгээр сүүлийн үеийн ECMAscript-т хувилбаруудад class -ыг оруулж ирсэн боловч наанаа class гэж харагдуулдаг болохоос биш цаанаа жинхэнэдээ class байдаггүй */
