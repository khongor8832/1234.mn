// функц болгон өөрийн гэсэн Execution Context -тай

/* функц кодын ажиллах орчин - Execution Context 
1. Хувьсагч объект - Varable object
    Энэ нь функцыг ажиллахаас өмнө Javascript -ын engune нь  функцын кодыг дээрээс нь ахуулаад дуустал scan хийгээд
    дотор нь ямар хувьсагч байна бүгдын хайж олоод энэ хувьсагчын объектийн хэсэгт байрлуулдаг. Гэхдээ бүгдэнд нь 
    undefined гэсэн утга өгөөд байрлуулчихдаг. Мөн дотор нь байгаа бүх функцуудыг хайж олоод мөн энэ д байрлуулчихдаг.
    Энэ бүгдийг хийхийг Hoisting гэдэг. 
2. This тусгай хувьсагч
    Энэ нь функц болгон дотор байдаг бичиж үедээ ямар байх нь тодорхойгүй, ажиллах үеддээ ямар байх нь шийдэгддэг байгаа
    compiler engune шийдэж өгдөг байгаа
    . Функц доторх THIS тусгай хувьсагч нь глобал this буюу хамгийн гадна байх глобал 
    объектыг зааж байдаг. Гэтэл байгуулагч функц ашилахад үзсэн new гэдэг оператор ашиглан энэ this -ийг өөрчлөөд өөр 
    тусгай шинэ объект болгож хувиргаад энэ функцанд зоогоод өгдөг бөгөөд тэрний дараагаар bind, call, apply зэрэг функцууд 
    нь энэ this гэдэг хувьсагчийг шал ондоо хувьсагчаар сольж өгөх талаар үзсэн.  
3. SCOPE CHAIN
    Энэ нь функцуудын харагдах үзгдэх хүрээг тодорхойлдог  */

/* Ececution context ===> Үүсгэх шат ===> scope chain үүсгэх 
       A функц дотор B функц байгаа, B функц дотор C функц байгаад хэвлэж байгаа. Энэ нь функц дотор функц бичих хэлбэр 
       Хамгийн дотор талд байгаа С нь гадна байгаа хувьсагчийн объект  A , B хандаж чадна. */
// var a = 1;                 /*Функц А*/                      /*ХО_A */

// var b = 20;                /*Функц B*/                      /*ХО_B + ХО_A */

// var c = 7;                 /*Функц C*/                      /*ХО_C + ХО_B + ХО_A */
// console.log(a + b + c);  /*28 гэж хэвлэнэ. */

// EXECUTION STACK өгөгдлийн бүтэц

// var name = 'Jhon';                 /*Execution context */              /* Хувьсагч объект - Varable object*/
// function first() {                      /* third */                          /*This тусгай хувьсагч */
//     var a = 'Hello';                                                             /*SCOPE CHAIN */
//     second();
//     var x = a + name;               /*Execution context */             /* Хувьсагч объект - Varable object*/
// }                                        /* second */                          /*This тусгай хувьсагч */
// function second() {                                                             /*SCOPE CHAIN */
//     var a = 'Hi';
//     second();                       /*Execution context */              /* Хувьсагч объект - Varable object*/
//     var x = a + name;                   /* first */                             /*This тусгай хувьсагч */
// }                                                                                  /*SCOPE CHAIN */
// function third() {
//     var a = 'Hey';
//     second();                       /*Global Execution */
//     var x = a + name;                   /*Context */
// }

// setTimeout функц - 3секундын дараа гарч ирэх функц

// setTimeout(hello, 2000);
// function hello(){
//     console.log('Сайн уу? ');
// }

// // нэргүй функц Annoynis функц

// setTimeout(function (){
//     console.log('Сайн уу? ');
// }, 3000);

//
function showPost(content) {
  var editedContent =
    "Шинэ мэдээ : " +
    content +
    "\n\nТа нэмэлт мэдээлэл авахыг хүсвэл 1234.мн сайтаар зочлоорой";
  console.log(editedContent);

  return function () {
    var email = prompt(
      editedContent +
        "\n\nХэрэв та имэйл хаягаа оруулбал бид танд шинэ мэдээллийг түргэн шуурхай хүргэж байх болно."
    );

    document.write(
      "Баярлалаа! Бид таны оруулсан имэйл хаягийг хүлээж авлаа. Таны имэйл : " +
        email
    );
  };
}
var medee = "1234.mn сайтын хямдрал дуусахад ердөө нэг хоног үлдлээ!.";
var askEmailFunction = showPost(medee);
setTimeout(askEmailFunction, 5000);
// Тайлбар: Тухайн гаднах функцууд ажиллаад дуусчихсан байхад Closure функцыг хэзээч хамаагүй дуудаж ажиллуулж болно.
